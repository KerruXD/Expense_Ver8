@model ASI.Basecode.Services.ServiceModels.SettingsViewModel

@{
    ViewData["Title"] = "Settings";
}

<div class="container mt-4">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
            <strong>Error!&nbsp;</strong> @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
            <strong>Success!&nbsp;</strong> @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <h1>Settings & Preferences</h1>
    <hr>

    <!-- Update Profile Section -->
    <div class="mb-4">
        <h4>Update Profile</h4>
        <form asp-action="UpdateProfile" method="post">
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label for="FullName" class="form-label">Full Name</label>
                @Html.TextBoxFor(m => m.Profile.FullName, new { @class = "form-control", id = "FullName" })
                @Html.ValidationMessageFor(m => m.Profile.FullName, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <input type="email" class="form-control" id="Email" name="Email" value="@Model.Profile.Email" readonly>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </form>
    </div>

    <hr>

    <!-- Change Password Section -->
    <div>
        <h4>Change Password</h4>
        <form asp-action="ChangePassword" method="post">
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label for="CurrentPassword" class="form-label">Current Password</label>
                @Html.PasswordFor(m => m.Password.CurrentPassword, new { @class = "form-control", id = "CurrentPassword" })
                @Html.ValidationMessageFor(m => m.Password.CurrentPassword, "", new { @class = "text-danger" })
            </div>

            <!-- New Password and Confirm New Password Side by Side -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="NewPassword" class="form-label">New Password</label>
                    @Html.PasswordFor(m => m.Password.NewPassword, new { @class = "form-control", id = "NewPassword" })
                    @Html.ValidationMessageFor(m => m.Password.NewPassword, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    <label for="ConfirmNewPassword" class="form-label">Confirm New Password</label>
                    @Html.PasswordFor(m => m.Password.ConfirmNewPassword, new { @class = "form-control", id = "ConfirmNewPassword" })
                    @Html.ValidationMessageFor(m => m.Password.ConfirmNewPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Change Password</button>
        </form>
    </div>
    <div class="mb-4">
        <h4>Night Mode</h4>
        <button id="nightModeToggle" class="btn btn-dark">
            Toggle Night Mode
        </button>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Check if Night Mode is stored in localStorage
            if (localStorage.getItem('nightMode') === 'enabled') {
                $('body').addClass('night-mode');
            }

            // Night Mode toggle button functionality
            $('#nightModeToggle').click(function () {
                $('body').toggleClass('night-mode');

                // Store the current state of night mode in localStorage
                if ($('body').hasClass('night-mode')) {
                    localStorage.setItem('nightMode', 'enabled');
                } else {
                    localStorage.setItem('nightMode', 'disabled');
                }
            });
        });
    </script>
}